name: Generate Github Release And Upload Android AAR üó≥

on:
  workflow_call:
    secrets:
      SLACK_WEBHOOK:
        required: true
    inputs:
      UPLOADED_FILES_ID:
        description: 'The id for the files needs to be downloaded from artifacts and uploaded to git release..'
        type: string
        required: true
      NEW_AAR_FILE_NAME:
        description: 'The new name for the AAR file (e.g., finpay-payment-sdk-v1.0.0-release.aar).'
        type: string
        required: true
    # Map the workflow outputs to job outputs
    outputs:
      release_url:
        description: Release url link
        value: ${{ jobs.upload_matrix_artifacts.outputs.url }}

jobs:
  git_release:
    name: Generate Github Release
    runs-on: ubuntu-latest
    # Map the job outputs to step outputs
    outputs:
      release_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Create Release ‚úÖ
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

  upload_matrix_artifacts:
    needs: [ git_release ]
    name: Upload Generated Artifacts to Git Release.
    runs-on: ubuntu-latest
    # Map the job outputs to step outputs
    outputs:
      url: ${{ steps.upload-release-asset.outputs.browser_download_url }}

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.UPLOADED_FILES_ID }}
          path: ${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}

      - name: List downloaded files
        run: ls ${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}

      - name: Rename AAR file üìù
        run: |
          mv ${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}/**-release.aar \
            ${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}/${{ inputs.NEW_AAR_FILE_NAME }}

      - name: Create Keystore üîë
        run: keytool -genkeypair -v -keystore key_store_name.jks -keyalg RSA -keysize 2048 -validity 10000 -alias key_alias -dname "CN=Your Name, OU=Your Organizational Unit, O=Your Organization, L=Your Locality, ST=Your State, C=Your Country" -storepass 123456  -keypass 123456

      - name: Sign ARR üñã
        run: jarsigner -keystore key_store_name.jks -storepass 123456 -keypass 123456 -signedjar ${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}/${{ inputs.NEW_AAR_FILE_NAME }} ${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}/${{ inputs.NEW_AAR_FILE_NAME }} key_alias

      - name: Calculate SHA-256 Checksum üîç
        run: |
          FILE_PATH=${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}/${{ inputs.NEW_AAR_FILE_NAME }}
            CHECKSUM=$(sha256sum "$FILE_PATH" | cut -d ' ' -f 1)
            echo "SHA-256 Checksum: $CHECKSUM"
            echo "$CHECKSUM" > ${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}/checksum.txt
            echo "Checksum file created"

      - name: Upload Generated Android AAR üó≥ and Checksum üîç to Git Release
        id: upload-release-asset
        uses: sekwah41/upload-release-assets@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.git_release.outputs.release_url }}
          asset_path: ${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}/${{ inputs.NEW_AAR_FILE_NAME }}
                      ${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}/checksum.txt
          asset_content_type: application/aar
#          asset_name: ${{ inputs.NEW_AAR_FILE_NAME }}

#      - name: Ping Slack Assemble Module AAR Failed
#        uses: someimportantcompany/github-actions-slack-message@v1
#        if: failure()
#        with:
#          webhook-url: ${{ secrets.SLACK_WEBHOOK }}
#          text: |
#            *Assemble Android-module AAR failed*
#          color: failure
