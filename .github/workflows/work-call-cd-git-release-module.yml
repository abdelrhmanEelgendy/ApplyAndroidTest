name: Generate Github Release And Upload Android AAR 🗳

on:
  workflow_call:
    secrets:
      SLACK_WEBHOOK:
        required: true
    inputs:
      UPLOADED_FILES_ID:
        description: 'The id for the files needs to be downloaded from artifacts and uploaded to git release..'
        type: string
        required: true
      NEW_AAR_FILE_NAME:
        description: 'The new name for the AAR file (e.g., finpay-payment-sdk-v1.0.0-release.aar).'
        type: string
        required: true
    # Map the workflow outputs to job outputs
    outputs:
      release_url:
        description: Release url link
        value: ${{ jobs.upload_matrix_artifacts.outputs.url }}

jobs:
  git_release:
    name: Generate Github Release
    runs-on: ubuntu-latest
    # Map the job outputs to step outputs
    outputs:
      release_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Create Release ✅
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

  upload_matrix_artifacts:
    needs: [ git_release ]
    name: Upload Generated Artifacts to Git Release.
    runs-on: ubuntu-latest
    # Map the job outputs to step outputs
    outputs:
      url: ${{ steps.upload-release-asset.outputs.browser_download_url }}

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.UPLOADED_FILES_ID }}
          path: ${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}

      - name: List downloaded files
        run: ls ${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}


      - name: Rename AAR file 📝
        id: rename_aar_file
        run: |
          file_name=$(find "${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}" -type f -name '**-release.aar' -print -quit)
          file_result="${file_name/-release/-${{ github.ref_name }}-release}"
          echo "Renaming $file_name to $file_result"
          mv $file_name $file_result
          echo "named_file=$file_result" >> $GITHUB_OUTPUT  

#      - name: Rename AAR file 📝
#        run: |
#          mv ${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}/**-release.aar \
#            ${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}/${{ inputs.NEW_AAR_FILE_NAME }}

      - name: Create Keystore 🔑
        run: keytool -genkeypair -v -keystore key_store_name.jks -keyalg RSA -keysize 2048 -validity 10000 -alias key_alias -dname "CN=Your Name, OU=Your Organizational Unit, O=Your Organization, L=Your Locality, ST=Your State, C=Your Country" -storepass 123456  -keypass 123456

      - name: Sign ARR 🖋
        run: |
          echo my_var ${{needs.rename_aar_file.outputs.named_file}}
          jarsigner -keystore key_store_name.jks -storepass 123456 -keypass 123456 -signedjar ${{needs.rename_aar_file.outputs.named_file}} ${{needs.rename_aar_file.outputs.named_file}} key_alias

      - name: Calculate SHA-256 Checksum 🔍
        id: checksum
        run: |
          FILE_PATH=${{needs.rename_aar_file.outputs.named_file}}
            CHECKSUM=$(sha256sum "$FILE_PATH" | cut -d ' ' -f 1)
            echo "SHA-256 Checksum: $CHECKSUM"
            echo "$CHECKSUM" > ${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}/${{github.ref_name}}_checksum.txt
            echo "::set-output name=checksum_file::${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}/${{github.ref_name}}_checksum.txt"
            echo "Checksum file created"

      - name: Upload Generated Android AAR And Checksum File 📤
        id: upload-release-asset
        uses: sekwah41/upload-release-assets@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.git_release.outputs.release_url }}
          asset_path: |
            ${{needs.rename_aar_file.outputs.named_file}}
            ${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}/${{github.ref_name}}_checksum.txt
          asset_content_type: |
            application/aar
#            text/plain

#      - name: Upload Singed AAR CheckSum
#        id: upload-arr-checksum
#        uses: sekwah41/upload-release-assets@v1.1.0
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ needs.git_release.outputs.release_url }}
#          asset_path: ${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}/${{github.ref_name}}_checksum.txt
#          asset_content_type: text/plain
#          asset_name: ${{ inputs.NEW_AAR_FILE_NAME }}

#      - name: Ping Slack Assemble Module AAR Failed
#        uses: someimportantcompany/github-actions-slack-message@v1
#        if: failure()
#        with:
#          webhook-url: ${{ secrets.SLACK_WEBHOOK }}
#          text: |
#            *Assemble Android-module AAR failed*
#          color: failure
