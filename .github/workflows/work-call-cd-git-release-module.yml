name: Generate Github Release And Upload Android AAR ðŸ—³

on:
  workflow_call:
    secrets:
      SLACK_WEBHOOK:
        required: true
    inputs:
      MODULE_NAME:
        description: 'Which module you need to run this flow on...'
        type: string
        required: true
    # Map the workflow outputs to job outputs
    outputs:
      release_url:
        description: Release url link for the zip file.
        value: ${{ jobs.upload_matrix_artifacts.outputs.url }}

jobs:
  git_release:
    name: Generate Github Release
    runs-on: ubuntu-latest
    # Map the job outputs to step outputs
    outputs:
      release_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Create Release âœ…
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false

  upload_matrix_artifacts:
    needs: [ git_release ]
    name: Upload Generated Artifacts to Git Release.
    runs-on: ubuntu-latest
    # Map the job outputs to step outputs
    outputs:
      url: ${{ steps.upload-release-asset.outputs.browser_download_url }}

    steps:
#      - name: Download artifacts
#        uses: actions/download-artifact@v2
#        with:
#          name: ${{ inputs.UPLOADED_ZIP_FOLDER_ID }}
#          path: ${{ github.workspace }}/${{ inputs.UPLOADED_ZIP_FOLDER_ID }}
#
#      - name: List downloaded files
#        run: ls ${{ github.workspace }}/${{ inputs.UPLOADED_ZIP_FOLDER_ID }}


      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Restore APK from workspace
        uses: actions/checkout@v2
        with:
          path: workspace

      # Use the APK file from workspace
      # You can reference the APK file using the path: workspace/app/build/outputs/apk/debug/app-debug.apk
      # ...

      # For example, if you want to print the file content
      - name: Print APK File Content
        run: cat workspace/${{ inputs.MODULE_NAME }}/build/**-release.zip

      - name: Upload The Zip File ðŸ“¤
        id: upload-release-asset
        uses: sekwah41/upload-release-assets@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.git_release.outputs.release_url }}
          asset_path: workspace/${{ inputs.MODULE_NAME }}/build/**-release.zip
          asset_content_type: application/zip

      - name: Ping Slack Assemble Module AAR Failed
        uses: someimportantcompany/github-actions-slack-message@v1
        if: failure()
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK }}
          text: |
            *Upload Generated Artifacts to Git Release failed*
          color: failure

#  finish:
#    needs: [ upload_matrix_artifacts ]
#    name: Github Release And Upload Android AAR ðŸ—³
#    runs-on: ubuntu-latest
#    steps:
#      - name: Ping Slack Github Release And Upload Android AAR ðŸ—³ Failed
#        uses: someimportantcompany/github-actions-slack-message@v1
#        if: failure()
#        with:
#          webhook-url: ${{ secrets.SLACK_WEBHOOK }}
#          text: |
#            *Github release and uploading android AAR ðŸ—³ failed*
#          color: failure
