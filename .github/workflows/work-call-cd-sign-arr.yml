name: Sign Arr And Create Zip File 🗳

on:
  workflow_call:
    secrets:
      SLACK_WEBHOOK:
        required: true
    inputs:
      UPLOADED_FILES_ID:
        description: 'The id for the files needs to be downloaded from artifacts and uploaded to git release..'
        type: string
        required: true

      UPLOADED_ZIP_ID:
        description: 'The id for the files needs to be downloaded from artifacts and uploaded to git release..'
        type: string
        required: true

      MODULE_NAME:
        description: 'Which module you need to run this flow on...'
        type: string
        required: true

    outputs:
      release_url:
        description: "Release url link for the zip file."
        value: ${{ jobs.sign_arr_and_create_zip.outputs.release_url }}

jobs:

  sign_arr_and_create_zip:
    name: Sign And Zip ARR.
    runs-on: ubuntu-latest
    outputs:
      release_url: ${{ steps.zip_file.outputs.release_url }}

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Download artifacts 📥
        uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.UPLOADED_FILES_ID }}
          path: ${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}

      - name: List downloaded files 📂
        run: ls ${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}

      - name: Rename AAR file 📝
        id: renamed_aar_file
        run: |
          arr_path=$(find "${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}" -type f -name '**-release.aar' -print -quit)
          versioned_result="${arr_path/-release/-${{ github.ref_name }}-release}"
          mv $arr_path $versioned_result
          echo "renamed_arr=$versioned_result" >> $GITHUB_OUTPUT

      - name: Create Keystore 🔑
        run: keytool -genkeypair -v -keystore key_store_name.jks -keyalg RSA -keysize 2048 -validity 10000 -alias key_alias -dname "CN=Your Name, OU=Your Organizational Unit, O=Your Organization, L=Your Locality, ST=Your State, C=Your Country" -storepass 123456  -keypass 123456

      - name: Sign ARR 🖋
        run: jarsigner -keystore key_store_name.jks -storepass 123456 -keypass 123456 -signedjar ${{steps.renamed_aar_file.outputs.renamed_arr}} ${{steps.renamed_aar_file.outputs.renamed_arr}} key_alias

      - name: Calculate SHA-256 Checksum 🔍
        id: checksum
        run: |
          full_path=${{steps.renamed_aar_file.outputs.renamed_arr}}
          filename=$(basename "${full_path}")
          module_name="${filename/.aar/}"
          CHECKSUM=$(sha256sum "${full_path}" | cut -d ' ' -f 1)
          echo "$CHECKSUM" > "${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}/${module_name}-checksum.txt"
          echo "module_name=$module_name" >> $GITHUB_OUTPUT
          echo "check_sum_file=${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}/${module_name}-checksum.txt" >> $GITHUB_OUTPUT

      - name: Create HTML DOC Jar 📝
        run: ./gradlew ${{ inputs.MODULE_NAME }}:dokkaJavadocJar

      - name: Create ZIP File 🗜
        id: zip_file
        run: |
          arr_path=${{steps.renamed_aar_file.outputs.renamed_arr}}
          arr_name=$(basename "${arr_path}")
          module_name=${{steps.checksum.outputs.module_name}}
          check_sum_file=${{steps.checksum.outputs.check_sum_file}}
          dokka_javadoc_jar=${{ inputs.MODULE_NAME }}/build/libs/**.jar
          cd ${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}
          zip -r ${module_name}.zip ${module_name}-checksum.txt ${arr_name} ${dokka_javadoc_jar}
          echo "zip_url=${{ github.workspace }}/${{ inputs.UPLOADED_FILES_ID }}/${module_name}.zip" >> $GITHUB_OUTPUT
          echo "release_url=${{ github.workspace }}/${{ inputs.UPLOADED_ZIP_ID }}/${module_name}.zip" >> $GITHUB_OUTPUT

      - name: Upload Assembled Zip File 📤
        # Upload zip to ubuntu server to be used on another action...
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.UPLOADED_ZIP_ID}}
          path: ${{steps.zip_file.outputs.zip_url}}
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`
