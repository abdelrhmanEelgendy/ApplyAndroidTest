name: Run Instrumentation-test

on:
  push:
    branches: [ "master" ]



jobs:
  instrumentation-test:
    name: Run Instrumentation test
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [30]
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        #BUILD  CACHING
      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
          #SETUP JAVA
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      ###################
      - name: AVD cache
        uses: actions/cache@v2
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{matrix.api-level}}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          emulator-build: 9997245
          api-level: ${{ matrix.api-level }}
          target: google_apis_playstore
          arch: x86_64
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          profile: Nexus 5X
          force-avd-creation: false
          script: echo "Generated AVD snapshot for caching."
      #############
      - name: Run espresso tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
#          emulator-build: 9997245
#          api-level: ${{ matrix.api-level }}
#          target: google_apis_playstore
#          arch: x86_64
#          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
#          profile: Nexus 5X
#          force-avd-creation: false
          script: ./gradlew connectedCheck
      - name: Start ADB Server
        run: adb start-server
      - name: Upload instrumentation test report
        # Upload report
        uses: actions/upload-artifact@v3
        with:
          name: instrumentation_test_report
          path: app/build/reports/androidTests/connected/


      - name: Stop ADB Server
        run: adb kill-server

#jobs:
#  build-and-test:
#    name: Build and Run Espresso Tests
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v3
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: 17
#          cache: gradle
#      - name: Grant execute permission for gradlew
#        run: chmod +x ./gradlew
#
#      - name: Setup Android SDK
#        uses: android-actions/setup-android@v2
#        with:
#          sdk-platform: 30
#
#      - name: Restart ADB Server
#        run: adb kill-server && adb start-server
#
#  instrumented-tests:
#    name: Instrumented tests
#    runs-on: macos-latest
#    timeout-minutes: 25
#    env:
#      JAVA_TOOL_OPTIONS: -Xmx4g -XX:+UseParallelGC
#      ENABLE_APP_VERSIONING: false
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - uses: gradle/wrapper-validation-action@v1
#
#      - uses: actions/setup-java@v2
#        with:
#          distribution: 'zulu'
#          java-version: '15'
#
#      - uses: actions/cache@v2
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-${{ github.job }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}
#          restore-keys: |
#            ${{ runner.os }}-${{ github.job }}-
#
#      - uses: actions/cache@v2
#        id: avd-cache
#        with:
#          path: |
#            ~/.android/avd/*
#            ~/.android/adb*
#          key: avd
#
#      - name: Generate AVD snapshot for caching
#        if: steps.avd-cache.outputs.cache-hit != 'true'
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: 30
#          arch: x86
#          profile: Nexus 5X
#          force-avd-creation: false
#          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
#          disable-animations: false
#          emulator-build: 6110076
#          script: echo "Generated AVD snapshot for caching."
#
#      - name: Run Android instrumented tests
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: 30
#          arch: x86
#          profile: Nexus 5X
#          force-avd-creation: false
#          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
#          emulator-build: 742582
#          script: ./gradlew connectedCheck
#
#
##      - name: Debug Print
##        run: |
##          echo "Current Shell: $SHELL"
##          echo "PATH: $PATH"
##
##      - name: Generate AVD snapshot for caching
##        if: steps.avd-cache.outputs.cache-hit != 'true'
##        uses: reactivecircus/android-emulator-runner@v2
##        with:
##          api-level: 23
##          arch: x86
##          profile: Nexus 5X
##          force-avd-creation: false
##          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
##          disable-animations: false
##          emulator-build: 6110076
##          script: echo "Generated AVD snapshot for caching."
##
##      - name: Run Android instrumented tests
##        uses: reactivecircus/android-emulator-runner@v2
##        with:
##          api-level: 23
##          arch: x86
##          profile: Nexus 5X
##          force-avd-creation: false
##          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
##          emulator-build: 6110076
##          script: ./gradlew connectedCheck
##        with:
##          api-level: 30
##          arch: x86
##          profile: Nexus 5X
##          force-avd-creation: false
##          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
##          emulator-build: 7425822
##          script: ./gradlew connectedCheck
#
#      - name: Upload instrumentation test report
#        uses: actions/upload-artifact@v3
#        with:
#          name: instrumentation_test_report
#          path: app/build/reports/androidTests/connected/
#jobs:
#
#  build:
#    runs-on: ubuntu-latest
#    steps:5
#      - uses: actions/checkout@v2
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'zulu'
#          java-version: 17
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x /path/to/script_or_binary
#
#      - name: Instrumentation tests
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: 31
#          force-avd-creation: false
#          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
#          script: ./gradlew connectedDebugAndroidTest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          distribution: 'adopt'
#          java-version: 11
#
#      - name: Set up Android emulator
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: 30
#          target: default
#          arch: x86
#          profile: Nexus 5
#          script: ./gradlew connectedDebugAndroidTest
#
#      - name: Start emulator
#        run: |
#          adb devices
#          emulator -avd emulator-30 -no-window -no-audio &
#
#      - name: Wait for emulator to start
#        run: android-wait-for-emulator
#
#      - name: Run Espresso tests
#        run: ./gradlew connectedCheck
#  build:
#    runs-on:  ubuntu-latest
#
#    steps:
#      - name: Set up JDK 17
#        uses: actions/setup-java@v2
#        with:
#          distribution: 'adopt'
#          java-version: 17
#
#      - name: Set up Android SDK
#        uses: android-actions/setup-android@v2
#        with:
#          sdk-platform: 'platforms;android-29'
#      - name: Create emulator
#        run: echo no | avdmanager create avd --force -n test -k "system-images;android-29;google_apis;x86_64" --tag "google_apis_playstore;google_apis;x86_64" --abi "x86_64" --device "Nexus 5" --package "emulator;emulator-7425822"
#        continue-on-error: true
#
#      #      - name: Run espresso tests
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: 29
#          script: ./gradlew connectedCheck
#      - name: Create emulator
#        run: echo no | avdmanager create avd --force -n test -k "system-images;android-29;google_apis;x86_64"
#
#      - name: Start emulator
#        run: emulator -avd test -no-audio -no-window
#
#      - name: Wait for emulator to start
#        run: android-wait-for-emulator
#
#      - name: Grant permissions
#        run: adb shell input keyevent 82
#  build:
#
#    runs-on: ubuntu-2204
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: install dependencies
#        run: android-actions/setup-android@v2
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'corretto'
#
#
#      - name: Make Gradle executable
#        run: chmod +x ./gradlew
#
#
#
#      - name: Create and start emulator
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: 30
#          arch: x86_64
#          profile: Nexus 6
#          script: ./gradlew connectedAndroidTest
#
#      - name: Upload test results
#        uses: actions/upload-artifact@v2
#        with:
#          name: test-results
#          path: app/build/reports/androidTests/connected

#on:
#  workflow_call:
#    secrets:
#      SLACK_WEBHOOK:
#        required: true
#    inputs:
#      MODULE_NAME:
#        description: 'app'
#        type: string
#        required: true

#jobs:
#  instrumentation-test:
#    name: Run Instrumentation test
#    runs-on: macos-latest
#    steps:
#      - name: Checkout the code
#        uses: actions/checkout@v3
#

#
#      - name: Run espresso tests
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: 31
#          script: ./gradlew ${{ inputs.MODULE_NAME }}:connectedCheck

#      - name: Upload instrumentation test report
#        # Upload report to ubuntu server  to be used on another action...
#        if: ${{ always() }}
#        uses: actions/upload-artifact@v3
#        with:
#          name: instrumentation_test_report
#          path: ${{ inputs.MODULE_NAME }}/build/reports/androidTests/connected/

#      - name: Ping Slack Instrumentation-test Failed
#        uses: someimportantcompany/github-actions-slack-message@v1
#        if: failure()
#        with:
#          webhook-url: ${{ secrets.SLACK_WEBHOOK }}
#          text: |
#            *Instrumentation-test failed*
#          color: failure